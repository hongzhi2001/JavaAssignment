/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javaassignment;

import java.util.Iterator;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author hongz
 */
public class VaccineManage extends javax.swing.JFrame {
    String vaccineName,manufacturer,vcentre;
    int count;
    String id,name,manufacture,quantity,centre;
    Vector originalTableModel;
    DocumentListener documentListener;
    /**
     * Creates new form VaccineManage
     */
    public VaccineManage() {
        initComponents();
        Personnel.viewVaccine(jTable1);
        
        originalTableModel = (Vector) ((DefaultTableModel) jTable1.getModel()).getDataVector().clone();
        //add document listener to jtextfield to search contents as soon as something typed on it
        txtSearch.getDocument().addDocumentListener(documentListener);
        addDocumentListener();
        
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        txtName.setEnabled(true);
        txtManufacture.setEnabled(true);
        cboCentre.setEnabled(true);
    }

    private void addDocumentListener() {
        documentListener = new DocumentListener() {
            @Override
            public void changedUpdate(DocumentEvent documentEvent) {
                search();
            }

            @Override
            public void insertUpdate(DocumentEvent documentEvent) {
                search();
            }

            @Override
            public void removeUpdate(DocumentEvent documentEvent) {
                search();
            }

            private void search() {
                searchTableContents(txtSearch.getText());
            }
        };
    }
    
    public void searchTableContents(String searchString) {    
        DefaultTableModel currtableModel = (DefaultTableModel) jTable1.getModel();
          //To empty the table before search
          currtableModel.setRowCount(0);
          //To search for contents from original table content
          for (Object rows : originalTableModel) {
              Vector rowVector = (Vector) rows;
              for (Object column : rowVector) {
                  if (column.toString().contains(searchString)) {
                      //content found so adding to table
                      currtableModel.addRow(rowVector);
                      break;
                  }
              }

          }
      }
    
    //https://www.geeksforgeeks.org/remove-leading-zeros-from-a-number-given-as-a-string/
    public void removeLeadingZeros(String str)
    {
        // Regex to remove leading
        // zeros from a string
        String regex = "^0+(?!$)";
 
        // Replaces the matched
        // value with given string
        str = str.replaceAll(regex, "");
    }
    
    public void updateTable(){
        DefaultTableModel model = (DefaultTableModel)jTable1.getModel();
        model.getDataVector().removeAllElements();
        Personnel.viewVaccine(jTable1);
        model.fireTableDataChanged();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        btnBack = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        txtManufacture = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtQuantity = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        lblTitle = new javax.swing.JLabel();
        btnUpdate = new javax.swing.JButton();
        btnSearch = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        cboCentre = new javax.swing.JComboBox<>();
        btnClear = new javax.swing.JButton();
        btnReset = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(600, 200));

        jPanel1.setBackground(new java.awt.Color(153, 255, 255));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        )
        {
            public boolean isCellEditable(int row, int column) {
                //all cells false
                return false;
            }
        }
    );
    jTable1.getTableHeader().setReorderingAllowed(false);
    jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
        public void mouseClicked(java.awt.event.MouseEvent evt) {
            jTable1MouseClicked(evt);
        }
    });
    jScrollPane1.setViewportView(jTable1);

    btnBack.setText("Back");
    btnBack.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnBackActionPerformed(evt);
        }
    });

    jLabel2.setText("Vaccine Name:");

    jLabel3.setText("Manufacture:");

    jLabel4.setText("Quantity:");

    jLabel10.setText("Centre:");

    lblTitle.setFont(new java.awt.Font("Tahoma", 1, 36)); // NOI18N
    lblTitle.setText("Vaccine Management");

    btnUpdate.setText("Update");
    btnUpdate.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnUpdateActionPerformed(evt);
        }
    });

    btnSearch.setText("Search");
    btnSearch.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnSearchActionPerformed(evt);
        }
    });

    btnAdd.setText("Add");
    btnAdd.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnAddActionPerformed(evt);
        }
    });

    btnDelete.setText("Delete");
    btnDelete.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnDeleteActionPerformed(evt);
        }
    });

    cboCentre.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Setia City Convention Centre", "Sunway Pyramid Convention Centre", "Stadium Nasional Bukit Jalil", "Kuala Lumpur Convention Centre", "Axiata Arena Bukit Jalil", "Universiti Malaya(UM)" }));
    cboCentre.setSelectedIndex(-1);
    cboCentre.setToolTipText("");

    btnClear.setText("Clear");
    btnClear.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnClearActionPerformed(evt);
        }
    });

    btnReset.setText("Reset");
    btnReset.addActionListener(new java.awt.event.ActionListener() {
        public void actionPerformed(java.awt.event.ActionEvent evt) {
            btnResetActionPerformed(evt);
        }
    });

    javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
    jPanel1.setLayout(jPanel1Layout);
    jPanel1Layout.setHorizontalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jScrollPane1)
        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
            .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, 235, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(29, 29, 29)
            .addComponent(btnSearch)
            .addGap(26, 26, 26)
            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGap(129, 129, 129))
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(31, 31, 31)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGap(24, 24, 24)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(41, 41, 41)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(50, 50, 50)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 116, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGap(43, 43, 43)
                            .addComponent(btnClear, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(btnBack)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                            .addComponent(jLabel3)
                                            .addComponent(jLabel4))
                                        .addGap(24, 24, 24)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(txtManufacture, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                            .addGap(64, 64, 64)
                            .addComponent(jLabel10)
                            .addGap(18, 18, 18)
                            .addComponent(cboCentre, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGroup(jPanel1Layout.createSequentialGroup()
                    .addGap(137, 137, 137)
                    .addComponent(lblTitle)))
            .addContainerGap(90, Short.MAX_VALUE))
    );
    jPanel1Layout.setVerticalGroup(
        jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addGroup(jPanel1Layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblTitle)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnSearch)
                .addComponent(txtSearch, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btnReset))
            .addGap(18, 18, 18)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 229, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 25, Short.MAX_VALUE)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cboCentre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)))
            .addGap(20, 20, 20)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtManufacture, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel3))
            .addGap(20, 20, 20)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txtQuantity, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(jLabel4))
            .addGap(43, 43, 43)
            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btnDelete)
                .addComponent(btnUpdate)
                .addComponent(btnAdd)
                .addComponent(btnClear))
            .addGap(56, 56, 56)
            .addComponent(btnBack)
            .addGap(83, 83, 83))
    );

    javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );
    layout.setVerticalGroup(
        layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
        .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if(evt.getClickCount()==1){
            int row = jTable1.getSelectedRow();
            id = (String) jTable1.getValueAt(row, 0);
            name = (String) jTable1.getValueAt(row, 1);
            manufacture = (String) jTable1.getValueAt(row, 2);
            quantity = (String) jTable1.getValueAt(row, 3);
            centre = (String) jTable1.getValueAt(row, 4);

            txtName.setText(name);
            txtManufacture.setText(manufacture);
            txtQuantity.setText(quantity);
            cboCentre.setSelectedItem(centre);
            btnAdd.setEnabled(false);
            btnUpdate.setEnabled(true);
            btnDelete.setEnabled(true);
            txtName.setEnabled(false);
            txtManufacture.setEnabled(false);
            cboCentre.setEnabled(false);
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void btnBackActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnBackActionPerformed
        txtName.setText("");
        txtManufacture.setText("");
        txtQuantity.setText("");
        cboCentre.setSelectedIndex(-1);
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        txtName.setEnabled(true);
        txtManufacture.setEnabled(true);
        cboCentre.setEnabled(true);
        this.setVisible(false);
        JavaAssignment1.pHome.setVisible(true);
    }//GEN-LAST:event_btnBackActionPerformed

    private void btnClearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnClearActionPerformed
        txtName.setText("");
        txtManufacture.setText("");
        txtQuantity.setText("");
        cboCentre.setSelectedIndex(-1);
        btnAdd.setEnabled(true);
        btnUpdate.setEnabled(false);
        btnDelete.setEnabled(false);
        txtName.setEnabled(true);
        txtManufacture.setEnabled(true);
        cboCentre.setEnabled(true);
    }//GEN-LAST:event_btnClearActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        updateTable();
        txtSearch.setText("");
    }//GEN-LAST:event_btnResetActionPerformed

    private void btnSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchActionPerformed
        searchTableContents(txtSearch.getText());
    }//GEN-LAST:event_btnSearchActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
      
        if(txtName.getText().trim().isEmpty()||txtManufacture.getText().trim().isEmpty()||txtQuantity.getText().trim().isEmpty()||cboCentre.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(this, "Please ensure you have fill in all required details!");
        }else{
            vaccineName = txtName.getText();
            manufacturer = txtManufacture.getText();
            removeLeadingZeros(txtQuantity.getText());
            count = Integer.parseInt(txtQuantity.getText());       
            vcentre = cboCentre.getSelectedItem().toString();

            if(!(vaccineName.matches("^[A-Za-z1-9]{1,}$"))){
                JOptionPane.showMessageDialog(this, "Invalid vaccine name");
                return;
            }

            if(!(txtQuantity.getText().matches("^[0-9]{1,2}$"))){
                JOptionPane.showMessageDialog(this, "Invalid quantity");
                return;
            }
            
            boolean flag=true;
            int id=1;
            for(int i=0; i<DataIO.allVaccine.size(); i++){
                if(i <DataIO.allVaccine.get(i).getVaccineNo()){
                    id = DataIO.allVaccine.get(i).getVaccineNo()+1;
                }else{
                    id = DataIO.allVaccine.size()+1;
                }
            }
            Centre x = DataIO.checkCentre(vcentre);
            Vaccine v = new Vaccine(id,vaccineName,manufacturer,count,x);
            for(int i=0; i<DataIO.allVaccine.size(); i++){
                if(v.getName().equals(DataIO.allVaccine.get(i).getName()) &&
                   v.getManufacture().equals(DataIO.allVaccine.get(i).getManufacture()) &&
                   v.getVaccineCentre().getHealthFacility().equals(DataIO.allVaccine.get(i).getVaccineCentre().getHealthFacility())){
                   flag=false;
                   break;
                }
            }
            
            if(flag){
                JavaAssignment1.plogin.addVaccine(v);
                JOptionPane.showMessageDialog(this,"New vaccine added successfully!");
                txtName.setText("");
                txtManufacture.setText("");
                txtQuantity.setText("");
                cboCentre.setSelectedIndex(-1);
                updateTable();
                originalTableModel = (Vector) ((DefaultTableModel) jTable1.getModel()).getDataVector().clone();
            }else{
                JOptionPane.showMessageDialog(this,"The vaccine has been registered!"); 
            }
            
        }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        if(txtName.getText().trim().isEmpty()||txtManufacture.getText().trim().isEmpty()||txtQuantity.getText().trim().isEmpty()||cboCentre.getSelectedIndex()==-1){
            JOptionPane.showMessageDialog(this, "Please ensure you have fill in all required details!");
        }else{
            vaccineName = txtName.getText();
            manufacturer = txtManufacture.getText();
            removeLeadingZeros(txtQuantity.getText());
            count = Integer.parseInt(txtQuantity.getText());       
            vcentre = cboCentre.getSelectedItem().toString();

            if(!(vaccineName.matches("^[A-Za-z1-9]{1,}$"))){
                JOptionPane.showMessageDialog(this, "Invalid vaccine name");
                return;
            }

            if(!(txtQuantity.getText().matches("^[0-9]{1,2}$"))){
                JOptionPane.showMessageDialog(this, "Invalid quantity");
                return;
            }
            
            boolean flag=true;
            Vaccine v1=null;
            
            for (int i = 0; i < DataIO.allVaccine.size(); i++) {
               if (Integer.parseInt(id) == DataIO.allVaccine.get(i).getVaccineNo()) {
                   v1 = DataIO.allVaccine.get(i);
               }
            }
            
            if(v1!=null){
                Centre x = DataIO.checkCentre(vcentre);
                Vaccine v2 = new Vaccine(Integer.parseInt(id),vaccineName,manufacturer,count,x);
                for(int i=0; i<DataIO.allVaccine.size(); i++){
                    if(v2.getVaccineNo()==DataIO.allVaccine.get(i).getVaccineNo()&& 
                       v2.getName().equals(DataIO.allVaccine.get(i).getName()) &&
                       v2.getManufacture().equals(DataIO.allVaccine.get(i).getManufacture()) &&
                       v2.getQuantity()==DataIO.allVaccine.get(i).getQuantity()&&     
                       v2.getVaccineCentre().getHealthFacility().equals(DataIO.allVaccine.get(i).getVaccineCentre().getHealthFacility())){
                       flag=false;
                       break;
                    }
                }

                if(flag){
                    JavaAssignment1.plogin.updateVaccine(v1,v2);
                    JOptionPane.showMessageDialog(this,"Update Successfully!");
                    txtName.setText("");
                    txtManufacture.setText("");
                    txtQuantity.setText("");
                    cboCentre.setSelectedIndex(-1);
                    updateTable();
                    originalTableModel = (Vector) ((DefaultTableModel) jTable1.getModel()).getDataVector().clone();
                    btnAdd.setEnabled(true);
                    btnUpdate.setEnabled(false);
                    btnDelete.setEnabled(false);
                }else{
                    JOptionPane.showMessageDialog(this,"No changes have been done!"); 
                }
            }else{
                JOptionPane.showMessageDialog(this, "Vaccine not found!");
            }
        }
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
         Vaccine v1=null;
            
        for (int i = 0; i < DataIO.allVaccine.size(); i++) {
           if (Integer.parseInt(id) == DataIO.allVaccine.get(i).getVaccineNo()) {
               v1 = DataIO.allVaccine.get(i);
           }
        }
        
        Iterator<Appointment> iter = DataIO.allAppointment.iterator();
        while(iter.hasNext()){
                Appointment a = iter.next();             
                if(v1==a.getVaccine()){
                    iter.remove();
                }
            }
            DataIO.write();
        

        if(v1!=null){
            JavaAssignment1.plogin.deleteVaccine(v1);
            JOptionPane.showMessageDialog(this,"Delete Successfully!");
            txtName.setText("");
            txtManufacture.setText("");
            txtQuantity.setText("");
            cboCentre.setSelectedIndex(-1);
            updateTable();
            originalTableModel = (Vector) ((DefaultTableModel) jTable1.getModel()).getDataVector().clone();
            JavaAssignment1.pAppointment.updateTable();
            btnAdd.setEnabled(true);
            btnUpdate.setEnabled(false);
            btnDelete.setEnabled(false);
        }else{
            JOptionPane.showMessageDialog(this, "Vaccine not found!");
        }
    }//GEN-LAST:event_btnDeleteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VaccineManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VaccineManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VaccineManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VaccineManage.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VaccineManage().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnBack;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnSearch;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cboCentre;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JTextField txtManufacture;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtQuantity;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
